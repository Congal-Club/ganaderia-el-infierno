---
import Product from './Product.astro'
import type { Product as ProductType } from '../../types/product'
import Title from '../Title.astro'

interface Props {
  products: ProductType[]
  title?: string
}

const { products, title } = Astro.props
const { searchParams, pathname } = Astro.url

const sortByName = searchParams.get('sort-name')
const sortByPrice = searchParams.get('sort-price')

let sortedProducts = products

if (sortByName) {
  sortedProducts = sortByName === 'ascending'
    ? sortedProducts.sort((a, b) => a.name.localeCompare(b.name))
    : sortedProducts.sort((a, b) => b.name.localeCompare(a.name))
}

if (sortByPrice) {
  sortedProducts = sortByPrice === 'ascending'
    ? sortedProducts.sort((a, b) => a.price - b.price)
    : sortedProducts.sort((a, b) => b.price - a.price)
}
---

<section class='mt-4'>
  <input type='hidden' name='path' id='path' value={pathname}>

  <Title title={title ? title : 'Los mejores productos de la tienda'} />

  <div class='flex flex-wrap items-center justify-start gap-4 mb-4'>
    <label class='font-medium'>
      Ordenar por nombre
    
      <select class='px-4 py-2 border border-gray-300 rounded-md outline-none' name='sortName' id='sortName'>
        <option value='default'>Seleccionar...</option>
        
        <option value='ascending'>
          De manera ascendente
        </option>
  
        <option value='descending'>
          De manera descendente
        </option>
      </select>
    </label>
    
    <label class='font-medium'>
      Ordenar por precio
    
      <select class='px-4 py-2 border border-gray-300 rounded-md outline-none' name='sortPrice' id='sortPrice'>
        <option value='default'>Seleccionar...</option>
        
        <option value='ascending'>
          Precio de menor a mayor
        </option>
  
        <option value='descending'>
          Precio de mayor a menor
        </option>
      </select>
    </label>

    <button id='apply-filters' class='px-4 py-2 font-bold text-white transition bg-indigo-600 rounded-md shadow hover:bg-indigo-700 hover:shadow-lg hover:scale-105'>
      Aplicar filtros
    </button>
  </div>

  <section id='products' class='grid w-full grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4'>
    {products.map((product) => (
      <Product product={product} />
    ))}
  </section>
</section>

<script>
  const $sortByName = document.querySelector('#sortName')!
  const $sortByPrice = document.querySelector('#sortPrice')!
  const $apply = document.querySelector('#apply-filters')!
  const $path: any = document.querySelector('#path')!

  let searchParams = '' + $path.value

  $sortByName.addEventListener('input', (e: any) => {
    const { value } = e.currentTarget!

    if (!searchParams.includes('?')) searchParams += '?'
    searchParams += 'sort-name=' + value
  })
  
  $sortByPrice.addEventListener('input', (e: any) => {
    const { value } = e.currentTarget!

    if (!searchParams.includes('?')) searchParams += '?'
    searchParams += 'sort-price=' + value
  })

  $apply.addEventListener('click', () => {
    window.location.href = searchParams + '#products'
  })
</script>
